<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
            xmlns="http://www.pustefix-framework.org/2009/namespace/application-config"
            targetNamespace="http://www.pustefix-framework.org/2009/namespace/application-config"
            elementFormDefault="qualified" attributeFormDefault="unqualified">

  <xsd:annotation>
    <xsd:documentation>
      XML Schema for application descriptors
    </xsd:documentation>
  </xsd:annotation>

  <xsd:element name="pustefix-application">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="project" type="project-type"/>
        <xsd:element name="editor" type="editor-type" minOccurs="0"/>
        <xsd:element name="xml-generator" type="xml-generator-type"/>
        <xsd:element name="application" type="application-type"/>
        <xsd:element name="dynamic-includes" type="dynamic-includes-type" minOccurs="0"/>
        <xsd:element name="properties" type="properties-type" minOccurs="0"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:complexType name="project-type">
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="editor-type">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="choose">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="when" maxOccurs="unbounded">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="enabled" type="xsd:boolean"/>
                  </xsd:sequence>
                  <xsd:attribute name="test" type="xsd:string" use="required"/>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="otherwise" minOccurs="0">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="enabled" type="xsd:boolean"/>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="enabled" type="xsd:boolean"/>
      </xsd:choice>
      <xsd:element name="location" type="xsd:string"/>
      <xsd:element name="secret" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="xml-generator-type">
    <xsd:sequence>
      <xsd:element name="config-file" type="xsd:string"/>
      <xsd:choice>
          <xsd:element name="choose">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="when" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:group ref="xml-generator-choose-group" maxOccurs="unbounded"/>
                    <xsd:attribute name="test" type="xsd:string" use="required"/>
                  </xsd:complexType>
                </xsd:element>
                <xsd:element name="otherwise" minOccurs="0">
                  <xsd:complexType>
                    <xsd:group ref="xml-generator-choose-group" maxOccurs="unbounded"/>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:group ref="xml-generator-choose-group" maxOccurs="unbounded"/>
        </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:group name="xml-generator-choose-group">
    <xsd:choice>
      <xsd:element name="check-modtime" type="xsd:boolean"/>
      <xsd:element name="include-cache">
        <xsd:complexType>
          <xsd:attribute name="capacity" type="xsd:int" use="required"/>
          <xsd:attribute name="class" type="xsd:string"/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="target-cache">
        <xsd:complexType>
          <xsd:attribute name="capacity" type="xsd:int" use="required"/>
          <xsd:attribute name="class" type="xsd:string"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>  
  </xsd:group>
  
  <xsd:complexType name="application-type">
    <xsd:sequence>
      <xsd:element name="docroot-path" type="xsd:string"/>
      <xsd:element name="default-path" type="xsd:string"/>
      <xsd:element name="context-xml-service">
        <xsd:complexType>
        <xsd:sequence>
          <xsd:element name="path" type="xsd:string"/>
          <xsd:element name="config-file" type="xsd:string"/>
          <xsd:element name="additional-trail-info" type="xsd:string" minOccurs="0"/>
          <xsd:choice minOccurs="0">
            <xsd:element name="choose">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="when" maxOccurs="unbounded">
                    <xsd:complexType>
                      <xsd:sequence>
                        <xsd:element name="session-cleaner-timeout" type="xsd:int"/>
                      </xsd:sequence>
                      <xsd:attribute name="test" type="xsd:string" use="required"/>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="otherwise" minOccurs="0">
                    <xsd:complexType>
                      <xsd:sequence>
                        <xsd:element name="session-cleaner-timeout" type="xsd:int"/>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="session-cleaner-timeout" type="xsd:int"/>
          </xsd:choice>
        </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="direct-output-service" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="path" type="xsd:string"/>
            <xsd:element name="config-file" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deref-service" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="path" type="xsd:string"/>
            <xsd:element name="validtime" type="xsd:int"/>
            <xsd:element name="mustsign" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="webservice-service" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="path" type="xsd:string"/>
            <xsd:element name="config-file" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="static" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="path" type="xsd:string" maxOccurs="unbounded"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:choice>
        <xsd:element name="choose">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="when" maxOccurs="unbounded">
                <xsd:complexType>
                  <xsd:choice>
                    <xsd:element name="exception-processing" type="exception-processing-type"/>
                  </xsd:choice>
                  <xsd:attribute name="test" type="xsd:string" use="required"/>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="otherwise" minOccurs="0">
                <xsd:complexType>
                  <xsd:choice>
                    <xsd:element name="exception-processing" type="exception-processing-type"/>
                  </xsd:choice>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="exception-processing" type="exception-processing-type"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="exception-processing-type">
    <xsd:sequence>
      <xsd:element name="process" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:attribute name="type" type="xsd:string" use="required"/>
          <xsd:attribute name="processor" type="xsd:string"/>
          <xsd:attribute name="forward" type="xsd:boolean"/>
          <xsd:attribute name="page" type="xsd:string"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
 
  <xsd:complexType name="properties-type">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="prop" type="property-type"/>
      <xsd:element name="choose">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="when" maxOccurs="unbounded">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="prop" type="property-type" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="test" type="xsd:string" use="required"/>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="otherwise" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="prop" type="property-type" maxOccurs="unbounded"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="property-type">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="name" type="xsd:string" use="required"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  
  <xsd:complexType name="dynamic-includes-type">
    <xsd:sequence>
      <xsd:element name="default-search">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="module" type="xsd:string" maxOccurs="unbounded"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType> 
  
  
  
  
  <xsd:element name="bean">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="class" type="ClassType" use="required"/>
      <xsd:attribute name="exclude-by-default" type="xsd:boolean"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="property">
    <xsd:complexType>
      <xsd:attribute name="name" type="xsd:string" use="required"/>
      <xsd:attribute name="alias" type="xsd:string"/>
      <xsd:attribute name="exclude" type="xsd:boolean"/>
      <xsd:attribute name="include" type="xsd:boolean"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:simpleType name="ClassType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[a-zA-Z][a-zA-Z0-9_]*(\.[a-zA-Z][a-zA-Z0-9_]*)*"/>
    </xsd:restriction>
  </xsd:simpleType>

</xsd:schema>
